<?xml version="1.0" encoding="utf-8"?>
<project name="tinyTiM" default="jar" basedir=".">
    <property file="build.properties"/>
    <tstamp/>
    <property name="release_type" value="-snapshot-${DSTAMP}${TSTAMP}"/>

    <property name="dir.src" value="${basedir}/src/main/java"/>
    <property name="dir.test" value="${basedir}/src/test/java"/>
    <property name="dir.lib" value="${basedir}/lib"/>

    <property name="lib.junit" value="${dir.lib}/junit-4.5.jar"/>
    <property name="lib.tmapi" value="${dir.lib}/tmapi-2.0a1.jar"/>
    <property name="lib.tinytim" value="${dir.lib}/tinytim-2.0.0a3.jar"/>
    <property name="lib.logging" value="${dir.lib}/slf4j-api-1.5.2.jar"/>
    <property name="lib.mio" value="${dir.lib}/semagia-mio-0.9.3.jar"/>

    <target name="help">
        <echo message="------------------------"/>
        <echo message="tinyTiM MIO - Build file"/>
        <echo message="------------------------"/>
        <echo message=""/>
        <echo message="Available targets:"/>
        <echo message=""/>
        <echo message=" jar     Creates the jar"/>
        <echo message=" doc     Generates the Java Docs"/>
        <echo message=" release Creates the jar and a distributable file"/>
    </target>

    <target name="init">
        <property name="dist.version" value="${version}${version_suffix}${release_type}"/>
        <property name="dist.name" value="tinytim-mio-${dist.version}"/>

        <property name="tinytim-mio.jar" value="${dist.name}.jar"/>
        <property name="tinytim-mio.tar" value="${dist.name}.tar"/>
        <property name="tinytim-mio.tar.gz" value="${tinytim-mio.tar}.gz"/>
        <property name="tinytim-mio.zip" value="${dist.name}.zip"/>

        <property name="dir.build" value="${basedir}/build"/>
        <property name="dir.dist.root" value="${dir.build}/dist"/>
        <property name="dir.dist" value="${dir.dist.root}/${dist.name}"/>
        <property name="dir.build.classes" value="${dir.build}/classes"/>
        <property name="dir.build.tests" value="${dir.build}/tests"/>
        <property name="dir.javadocs" value="${dir.dist}/docs/api"/>
    </target>

    <!-- =================================================================== -->
    <!-- Clean targets                                                       -->
    <!-- =================================================================== -->
    <target name="clean" depends="init">
        <delete dir="${dir.build}"/>
        <delete dir="${dir.javadocs}"/>
    </target>
 
    <!-- =================================================================== -->
    <!-- Prepares the build directory                                        -->
    <!-- =================================================================== -->
    <target name="prepare" depends="init">
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.build.classes}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Java Docs                                               -->
    <!-- =================================================================== -->
    <target name="doc" depends="init">
        <mkdir dir="${dir.javadocs}"/>
        <javadoc destdir="${dir.javadocs}"
            packagenames="org.tinytim.*"
            author="true"
            version="false"
            use="true"
            splitindex="true"
            noindex="false"
            windowtitle="tinyTiM MIO API v${dist.version}"
            doctitle="tinyTiM API MIO v${dist.version}">
            <fileset dir="${dir.src}">
            </fileset>
            <link href="http://www.tmapi.org/apiDocs/"/>
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Tests                                                               -->
    <!-- =================================================================== -->
    <target name="test" depends="compile">
        <mkdir dir="${dir.build.tests}"/>
        <javac destdir="${dir.build.tests}" 
            debug="${debug}"
            optimize="${optimize}"
            target="1.5">
            <classpath>
                <pathelement location="${dir.build.classes}"/>
                <pathelement location="${lib.junit}"/>
                <pathelement location="${lib.tmapi}"/>
                <pathelement location="${lib.tinytim}"/>
                <pathelement location="${lib.mio}"/>
            </classpath>
            <src path="${dir.test}"/>
        </javac>
        <junit printsummary="true" showoutput="false"
            errorProperty="test.failed" failureProperty="test.failed">
            <classpath>
                <pathelement location="${dir.build.classes}"/>
                <pathelement location="${dir.build.tests}"/>
                <pathelement location="${lib.junit}"/>
                <pathelement location="${lib.tmapi}"/>
                <pathelement location="${lib.tinytim}"/>
                <pathelement location="${lib.mio}"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest fork="no" todir="${dir.build}">
                <fileset dir="${dir.build.tests}/">
                    <include name="**/Test**.class"/>
                </fileset>
            </batchtest>
        </junit>
        <fail message="Tests failed. Check test output." if="test.failed"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compile source files                                                -->
    <!-- =================================================================== -->
    <target name="compile" depends="clean, prepare">
        <javac destdir="${dir.build.classes}"
            debug="${debug}"
            target="1.5"
            excludes="org/tinytim/mio15/**">
            <classpath>
                <pathelement location="${lib.tmapi}"/>
                <pathelement location="${lib.tinytim}"/>
                <pathelement location="${lib.mio}"/>
                <pathelement location="${lib.logging}"/>
            </classpath>
            <src path="${dir.src}"/>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the jar                                                     -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <jar destfile="${dir.build}/${tinytim-mio.jar}">
            <fileset dir="${dir.build.classes}">
                <include name="**/*.*"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="tinyTiM MIO"/>
                <attribute name="Implementation-Version" value="${dist.version}"/>
                <attribute name="Implementation-URL" value="http://sourceforge.net/projects/tinytim"/>
            </manifest>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Prepares a distribution                                             -->
    <!-- =================================================================== -->
    <target name="dist" depends="jar">
        <mkdir dir="${dir.dist}"/>

        <copy todir="${dir.dist}" file="${dir.build}/${tinytim-mio.jar}"/>

        <copy todir="${dir.dist}/src">
            <fileset dir="${dir.src}"/>
        </copy>
        <copy todir="${dir.dist}/test">
            <fileset dir="${dir.test}"/>
        </copy>
        <copy todir="${dir.dist}/lib">
            <fileset dir="${dir.lib}">
                <exclude name="**/tmapi*.jar"/>
                <exclude name="**/tinytim*.jar"/>
            </fileset>
        </copy>
       
        <copy todir="${dir.dist}" file="CHANGES.txt"/>
        <copy todir="${dir.dist}" file="LICENSE.txt"/>
        <copy todir="${dir.dist}" file="README.txt"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the distribution files (.zip and .tar.gz)                   -->
    <!--                                                                     -->
    <!-- Won't create the distribution files if a test fails                 -->
    <!-- =================================================================== -->
    <target name="release" depends="jar, test, doc, dist">
        <tar destfile="${dir.dist.root}/${tinytim-mio.tar}"
            basedir="${dir.dist.root}"/>
        <gzip src="${dir.dist.root}/${tinytim-mio.tar}"
            destfile="${dir.build}/${tinytim-mio.tar.gz}" />
        <delete file="${dir.dist.root}/${tinytim-mio.tar}" />
        <zip destfile="${dir.build}/${tinytim-mio.zip}" basedir="${dir.dist.root}"/>
    </target>
</project>
