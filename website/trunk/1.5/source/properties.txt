.. highlight:: java

Properties
==========

:Author: Lars Heuer (heuer[at]semagia.com)
:Date: $Date:$
:Version: $Rev:$

You can configure tinyTiM through some properties.

For convenience, the class ``org.tinytim.Property`` provides constants 
for tinyTiM-specific properties.

.. Note::

    These properties are tinyTiM-specific, other TMAPI compatible Topic Maps 
    engines ignore them or may report failures.


CollectionFactory property
--------------------------
tinyTiM provides two collection factories. The collection factory is used to 
create instances of ``java.util.Map`` and ``java.util.Set``. If tinyTiM detects, 
that the `Trove4J <http://trove4j.sourceforge.net/>`_ library is available, it 
utilizes that library. If Trove4J is not available, it uses a collection factory 
that utilizes the default Java collections.

As said, tinyTiM tries to detect the approbate collection factory, but you can 
configure the collection factory explicitly::

    import org.tmapi.core.TopicMapSystemFactory;
    import org.tmapi.core.TopicMapSystem;
 
    TopicMapSystemFactory tmSysFactory = TopicMapSystemFactory.newInstance();
 
    // Sets the collection factory to the Java implementation even if Trove4J is available
    tmSysFactory.setProperty("org.tinytim.CollectionFactory", "org.tinytim.JavaCollectionFactory");
 
    TopicMapSystem tmSys = tmSysFactory.newTopicMapSystem();

